{"version":3,"sources":["./src/app/shared/services/movie.service.ts","./src/app/admin/admin-routing.module.ts","./src/app/user/mybooking/mybooking.component.ts","./src/app/user/mybooking/mybooking.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/user.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/shared/services/auth-guard.service.ts","./src/environments/environment.ts","./src/app/dashboard/index.ts","./src/app/user/movie-details/movie-details.component.ts","./src/app/user/movie-details/movie-details.component.html","./src/app/user/confirmed-booking/confirmed-booking.component.ts","./src/app/user/confirmed-booking/confirmed-booking.component.html","./src/app/user/index.ts","./src/app/authentication/index.ts","./src/app/authentication/authentication.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/shared/services/authentication.service.ts","./src/app/admin/index.ts","./src/app/user/user-routing.module.ts","./src/app/header/index.ts","./src/app/app.module.ts","./src/app/user/history/history.component.ts","./src/app/user/history/history.component.html","./src/app/admin/addmovie/addmovie.component.ts","./src/app/admin/addmovie/addmovie.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/addtimeslots/addtimeslots.component.ts","./src/app/admin/addtimeslots/addtimeslots.component.html","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/shared/models/booking.model.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/home/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRoute,Router} from '@angular/router'\nimport {HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  userId:any=0;\nrole:any;\n  rootUrl='api/movie';\n  constructor(\n    private http:HttpClient,\n    private router:Router\n  ) { }\n\n  setUserId(){\n    this.userId=window.localStorage.getItem(\"userId\")==null?0:window.localStorage.getItem(\"userId\");\n    this.role=window.localStorage.getItem(\"role\");    \n  }\n  \n  getMovies(){\n    return this.http.get(this.rootUrl+'/movies/all');\n  }\n\n  getMovie(mid:any){\n    return this.http.get(this.rootUrl+`/movies/${mid}`);\n  }\n\n  \n  postBooking(bookMovie:any){\n    this.http.post(this.rootUrl+'/movies',bookMovie)\n    .subscribe(res=>{\n      this.router.navigate(['/bookings']);\n    })\n\n  }\n\n  getMyBookings():Observable<any[]>{\n    return this.http.get<any[]>(`${this.rootUrl}/movies/mybookings/${this.userId}`);\n  }\n\n\n  deleteBooking(bookingId:any){\n\n    return this.http.get( `${this.rootUrl}/movies/deletebooking/${bookingId}`);\n  }\n\n  confirmBooking(){\n    return this.http.get(`${this.rootUrl}/movies/confirmbooking/${this.userId}`);\n  }\n\n  getBookingHistory(){\n    return this.http.get(`${this.rootUrl}/movies/history/${this.userId}`);\n  }\n\n  postMovie(movie:any){\n    console.log(movie);\n    return  this.http.post(`${this.rootUrl}/movies/addmovie`,movie);\n    \n  }\n\n  postTimeSlot(timeSlot:any){\n    return this.http.post(`${this.rootUrl}/movies/addtimeslot`,timeSlot);\n  }\n\n  getTimeSlots(){\n    return this.http.get(`${this.rootUrl}/movies/gettimeslots`);\n  }\n\n  getTimeSlot(movieId:any){\n    return this.http.get(`${this.rootUrl}/movies/gettimeslot/${movieId}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent,AddmovieComponent,AddtimeslotsComponent } from './index';\nimport {AuthGuardService as AuthGuard} from '../shared/services/auth-guard.service'\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\n\nconst role={\n  admin:'Admin',\n  user:'User'\n}\n\nlet routes: Routes = [\n  {\n      path: \"\",\n      component: AdminComponent,\n      canActivate:[AuthGuard],\n      data:{\n        role:role.admin\n      },\n      children: [\n        {\n          path:'addmovie',component:AddmovieComponent\n        },\n        {\n          path:'timeslot',component:AddtimeslotsComponent\n        }\n      ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  providers:[{ provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    JwtHelperService],\n  exports: [RouterModule]\n})\n\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router'\n\nimport { MovieService } from '../../shared/services/movie.service';\n\n@Component({\n  selector: 'app-mybooking',\n  templateUrl: './mybooking.component.html'\n})\nexport class MybookingComponent implements OnInit {\n\n  constructor(\n    private movieService:MovieService,\n    private router:Router\n  ) { }\n\nmyBookings:any[] = [];\ntotalPrice=0;\n  \nngOnInit(): void {\n\n  this.myBookingInitializer();\n  }\n\n  myBookingInitializer(){\n    \n    this.movieService.getMyBookings().subscribe(res=>{\n      this.myBookings=res;\n\n      var price=this.myBookings.map(element=>{\n        return element.Quantity*element.Price;\n      })\n      this.totalPrice=price.reduce((total:any,value:any)=>{\n        return total+value;\n      })\n      \n       });\n  }\n\n  deleteBooking(bookingId:any){\n\n    this.movieService.deleteBooking(bookingId).subscribe(res=>{\n      this.myBookingInitializer();\n    });\n    \n  }\n\n  confirmBooking(){\n    this.movieService.confirmBooking().subscribe(res=>{\n    this.router.navigate(['/user/confirmed']);\n    });    \n  }\n  \n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <table class=\"table table-borderless table-hover\">\n            <h3 class=\"display-4 mb-3\">My Bookings</h3>\n            <tbody>\n                <tr *ngFor=\"let movie of myBookings\">\n                    <td>{{movie.name}}</td>\n                    <td>{{movie.Price}}</td>\n                    <td>{{movie.Quantity}}</td>\n                    <td>{{movie.Quantity*movie.Price}}</td>\n                    <td><button class=\"btn btn-outline-danger\" (click)=\"deleteBooking(movie.Id)\">X</button></td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td>Total Amount</td>\n                    <td>{{totalPrice}}</td>\n                    <td><button class=\"btn btn-outline-success\" (click)=\"confirmBooking()\">Confirm Booking</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html'\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {ConfirmedBookingComponent,MovieDetailsComponent,HistoryComponent,MybookingComponent} from './index'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserComponent } from './user.component';\nimport { UserRoutingModule } from './user-routing.module';\n\n@NgModule({\n  declarations: [\n    ConfirmedBookingComponent,\n    MovieDetailsComponent,\n    HistoryComponent,\n    MybookingComponent,\n    UserComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UserRoutingModule\n  ],\n  exports:[\n    ConfirmedBookingComponent,\n    MovieDetailsComponent,\n    HistoryComponent,\n    MybookingComponent\n  ]\n})\nexport class UserModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    ) { }\n\n    ngOnInit(){}\n\n}\n","<div class=\"banner-image\">\n  <div class=\"container\">\n    <div class=\"banner-content\">\n      <br>\n      <h1>BookMyShow</h1><br>\n      <p>Book Latest,Popular,Trending Movies Here..</p><br>\n      <a [routerLink]=\"['/authentication/signup']\" class=\"btn btn-outline-danger btn-lg\">Book Now</a>\n   </div>\n </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport {Router,  ActivatedRouteSnapshot} from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(\n    public authenticationService:AuthenticationService,\n    public router:Router,\n  \n  ) { }\n\n  canActivate(route:ActivatedRouteSnapshot):boolean{\n    var role=route.data.role;\n    if(this.authenticationService.isAuthenticated() && role==localStorage.getItem(\"role\")){\n      return true;\n    }else{\n      this.router.navigate(['']);\n      return false;\n      \n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export * from \"./dashboard.component\";","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\n\nimport { MovieService } from '../../shared/services/movie.service';\nimport { Booking } from '../../shared/models/booking.model';\nimport { TimeSlot } from 'src/app/shared/models/timeSlot.model';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie-details.component.html'\n})\nexport class MovieDetailsComponent implements OnInit {\n\n  movieId:any;\n  movie:any='';\n  persons=1;\n  timeSlot:any;\n    \n  \n  constructor(\n    private route:ActivatedRoute,\n    private movieService:MovieService,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      this.movieId=params.get(\"movieId\");\n      this.movieService.setUserId();\n      this.movieService.getMovie(this.movieId)\n      .subscribe(res=>{\n        this.movie=res;\n       });\n       this.movieService.getTimeSlot(this.movieId).subscribe(res=>{\n         this.timeSlot=res as TimeSlot;\n       })\n    })\n  }\n\n  noOfPerson(isIncrement=false){\n  \n    if(!isIncrement){\n      if(this.persons>1){\n        this.persons--;\n      }\n    }else{\n      this.persons++;\n    }\n  }\n\n\n  postBooking(movie:any){\n    var booking=new Booking(this.movieService.userId,movie.id,this.persons);  \n    this.movieService.postBooking(booking);    \n  }\n\n}\n","\n\n<div class=\"container\">\n    <div class=\"row my-3\">\n        <div class=\"col-md-6\">\n            <img src={{movie.imageSource}} width=\"500px\" height=\"400px\" alt=\"\">\n        </div>\n        <div class=\"col-md-6 \">\n            <h4 class=\"display-4\">{{movie.name}}</h4>\n            <p>Rating: {{movie.rating}}/10</p>\n            <p>Genre: {{movie.genre}}</p>\n            <p>Casts: <span *ngFor=\"let cast of movie.casts\" class=\"mx-2\">{{cast.castName}},</span></p>\n            <p>Director & Producer: {{movie.director}}/{{movie.producer}}</p>\n            <p>Price: Rs {{movie.price | currency:'INR'}}</p>\n            <p>Time Slot: {{timeSlot.startTime }}-{{timeSlot.endTime}}</p>\n            <p>No. of Person: <button class=\"btn btn-outline-primary\" (click)=\"noOfPerson()\">-</button>\n                <b class=\"mx-2\">{{persons}}</b>\n                <button class=\"btn btn-outline-primary\" (click)=\"noOfPerson(true)\">+</button></p>\n            \n            <button class=\"btn btn-danger form-control\" id=\"bookingButton\" (click)=\"postBooking(movie)\">Book</button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmed-booking',\n  templateUrl: './confirmed-booking.component.html'\n})\nexport class ConfirmedBookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"jumbotron\">\n            <h1 class=\"display-4\">Thankyou For Booking on BookMyShow</h1>\n            <p class=\"text-success\">Your tickets will be send to your registred mail.</p>\n            <p class=\"text-warning\">Now you can enjoy your movies.</p>\n        </div>\n    </div>\n</div>","export * from './confirmed-booking/confirmed-booking.component'\r\nexport * from './history/history.component'\r\nexport * from './movie-details/movie-details.component'\r\nexport * from './mybooking/mybooking.component'\r\nexport * from './user.component'","export * from \"./signin/signin.component\";\r\nexport * from './signup/signup.component';\r\nexport * from './authentication.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SigninComponent,SignupComponent} from './index'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { AuthenticationComponent } from './authentication.component';\n\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    SignupComponent,\n    AuthenticationComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,   \n    AuthenticationRoutingModule\n  ],\n  exports:[\n    SigninComponent,\n    SignupComponent\n  ]\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MovieService } from '../shared/services/movie.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private route: ActivatedRoute, private service: MovieService) {}\n  movies: any;\n  ngOnInit(): void {\n    this.service.setUserId();\n    this.service.getMovies().subscribe((res) => {\n      this.movies = res;\n    });\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"display-4\">Movies</h3>\n    <div class=\"row\">\n      <div *ngFor=\"let movie of movies\" >\n        <div\n          class=\"card\"\n          style=\"width: 18em; margin: 10px;\"\n          [routerLink]=\"['/movie',movie.id]\"\n        >\n          <img\n            class=\"card-img-top\"\n            src={{movie.imageSource}}\n            height=\"200px\"\n            alt=\"Card image cap\"\n          />\n          <div class=\"card-body\">\n            <p class=\"card-text\">{{ movie.name }}</p>\n            <p class=\"card-text\">Price-RS {{ movie.price }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr />\n      </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\nimport { MovieService } from 'src/app/shared/services/movie.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n})\nexport class SigninComponent implements OnInit {\n  signinForm: any;\n  role: any;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private movieService: MovieService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.signinFormInitializer();\n  }\n\n  signinFormInitializer(){\n    \n    this.signinForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  get formControls() {\n    return this.signinForm.controls;\n  }\n\n  onSubmit() {\n    this.authenticationService.signin(this.signinForm.value).subscribe((res) => {\n      if (res.status != 'Error') {\n        this.toastr.success(res.message, 'SignIn', { timeOut: 3000 });\n        window.localStorage.setItem('userId', res.id);\n        window.localStorage.setItem('token', res.token);\n        window.localStorage.setItem('role', res.role);\n        this.role = localStorage.getItem('role');\n        this.movieService.setUserId();\n        this.role === 'User'\n          ? this.router.navigate([`/dashboard`])\n          : this.router.navigate([`/admin/addmovie`]);\n      } else {\n        this.toastr.error(res.message, 'SignIn', { timeOut: 3000 });\n        this.signinFormInitializer();\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-5\">\n            <h3 class=\"display-4 text-center\">SignIn</h3>\n         \n            <form [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"form-group\">\n                    <label for=\"username\">User Name</label>\n                    <input type=\"text\" name=\"username\" formControlName=\"username\" id=\"username\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.username.invalid && formControls.username.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"username\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.password.invalid && formControls.password.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"submit\" class=\"btn btn-primary\" [disabled]=\"signinForm.invalid\" value=\"Sign In\">\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'BookMyShow';\n\n  constructor(){\n    \n  }\n  ngOnInit(){\nconsole.log(\"hello\");\n  }\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html'\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { LoginResponse, Response } from '../models/response.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  rootUrl=\"api/authentication\"\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  signUp(data:any){\nreturn this.http.post<Response>(this.rootUrl+'/signup',data);\n  }\n\n  signin(data:any){\n    return this.http.post<LoginResponse>(this.rootUrl+'/signin',data);\n  }\n  \n  public isAuthenticated():boolean{\n    const token=window.localStorage.getItem(\"token\");\n    return (token!=null)?true:false;\n    \n  }\n}\n","export * from './addmovie/addmovie.component'\r\nexport * from './addtimeslots/addtimeslots.component'\r\nexport * from './admin.component'","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ConfirmedBookingComponent,HistoryComponent,MovieDetailsComponent,MybookingComponent, UserComponent } from './index';\r\nimport {AuthGuardService as AuthGuard} from '../shared/services/auth-guard.service'\r\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\r\n\r\nconst role={\r\n  admin:'Admin',\r\n  user:'User'\r\n}\r\n\r\nlet routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: UserComponent,\r\n      canActivate:[AuthGuard],\r\n      data:{\r\n          role:role.user\r\n      },\r\n      children: [\r\n        {\r\n          path:'movie/:movieId',component:MovieDetailsComponent\r\n        },\r\n        {\r\n          path:'bookings',component:MybookingComponent\r\n        },\r\n        {\r\n          path:'confirmed',component:ConfirmedBookingComponent\r\n        },\r\n        {\r\n          path:'bookinghistory',component:HistoryComponent\r\n        }\r\n      ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  providers:[{ provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    JwtHelperService],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class UserRoutingModule { }\r\n","export * from \"./header.component\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\nimport {ReactiveFormsModule} from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {AuthenticationModule} from './authentication/authentication.module'\nimport {UserModule} from './user/user.module'\nimport {AdminModule} from './admin/admin.module'\nimport { HomeComponent } from './home';\nimport { HeaderComponent } from './header';\nimport { DashboardComponent } from './dashboard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    AdminModule,\n    UserModule,\n    AuthenticationModule,\n    HttpClientModule,\n    BrowserAnimationsModule, \n    ToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { MovieService } from '../../shared/services/movie.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n})\nexport class HistoryComponent implements OnInit {\n  constructor(private movieService: MovieService) {}\n\n  bookingHistory: any;\n\n  ngOnInit(): void {\n    this.movieService.getBookingHistory().subscribe((res) => {\n      this.bookingHistory = res;\n      \n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h3 class=\"display-4 mb-3\">History</h3>\n        <table class=\"table table-borderless table-striped\">\n                <thead>\n                    <tr>\n                        <td>Movie</td>\n                        <td>Price</td>\n                        <td>Tickets</td>\n                        <td>Total Price</td>\n                    </tr>\n                </thead>\n            <tbody>\n                <tr *ngFor=\"let movie of bookingHistory\">\n                    <td>{{movie.name}}</td>\n                    <td>{{movie.Price}}</td>\n                    <td>{{movie.Quantity}}</td>\n                    <td>{{movie.Quantity*movie.Price}}</td>\n                </tr>\n                \n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators ,FormArray} from '@angular/forms';\n\nimport { MovieService } from '../../shared/services/movie.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-addmovie',\n  templateUrl: './addmovie.component.html',\n})\nexport class AddmovieComponent implements OnInit {\n  constructor(\n    private movieService: MovieService,\n    private toastr: ToastrService) {}\n  movieForm: any;\n  timeSlots:any;\n  ngOnInit(): void {\n    this.movieFormInitializer();\n    this.movieService.getTimeSlots().subscribe(res=>{\n        this.timeSlots=res;\n    })\n  }\n\n  movieFormInitializer(){\n    this.movieForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      director: new FormControl('', Validators.required),\n      producer: new FormControl('', Validators.required),\n      rating: new FormControl('', Validators.required),\n      price: new FormControl('', Validators.required),\n      casts: new FormArray([]),\n      genre: new FormControl('', Validators.required),\n      timeslotid:new FormControl('',Validators.required), \n      image: new FormControl('', [Validators.required]),\n      imageSource: new FormControl('', [Validators.required])\n    });\n  }\n\n  get casts(){\n    return this.movieForm.get(\"casts\") as FormArray;\n  }\n  get formControls() {\n    return this.movieForm.controls;\n  }\nimageSrc:any;\n\n  onImageChange(event:any) {\n    const reader = new FileReader();\n    if(event.target.files && event.target.files.length) {\n      const [image] = event.target.files;\n      reader.readAsDataURL(image);\n    \n      reader.onload = () => {\n   \n        this.imageSrc = reader.result as string;\n     \n        this.movieForm.patchValue({\n          imageSource: reader.result\n        });\n   \n      };\n   \n    }\n  }\n\n  addCast() {\n    this.casts.push(\n      new FormGroup({\n        castname:new FormControl('',Validators.required)\n      })\n    )\n  }\n\n  onSubmit() {\n    this.movieService.postMovie(this.movieForm.value).subscribe((res) => {\n      this.toastr.success('Successfully Added');\n      this.movieFormInitializer();\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-5\">\n            <h3 class=\"display-4 text-center\">Add Movie</h3>\n            \n          \n            <form [formGroup]=\"movieForm\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"form-group\">\n                    <label for=\"name\">Movie Name</label>\n                    <input type=\"text\" name=\"name\" formControlName=\"name\" id=\"name\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.name.invalid && formControls.name.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"director\">Director</label>\n                    <input type=\"text\" name=\"director\" id=\"director\" formControlName=\"director\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.director.invalid && formControls.director.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"file\">Upload Poster</label>\n                    <input \n                        formControlName=\"image\"\n                        id=\"image\" \n                        type=\"file\" \n                        class=\"form-control\"\n                        accept=\"image/*\"\n                        (change)=\"onImageChange($event)\">\n                        \n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"producer\">Producer</label>\n                    <input type=\"text\" name=\"producer\" id=\"producer\" formControlName=\"producer\" class=\"form-control\"> \n                    <div *ngIf=\"formControls.producer.invalid && formControls.producer.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"rating\">Rating</label>\n                    <input type=\"number\" name=\"rating\" id=\"rating\" formControlName=\"rating\" class=\"form-control\"> \n                    <div *ngIf=\"formControls.rating.invalid && formControls.rating.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"price\">Price</label>\n                    <input type=\"number\" name=\"price\" id=\"price\" formControlName=\"price\" class=\"form-control\"> \n                    <div *ngIf=\"formControls.price.invalid && formControls.price.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"genre\">Genre</label>\n                    <input type=\"text\" name=\"genre\" id=\"genre\" formControlName=\"genre\" class=\"form-control\"> \n                    <div *ngIf=\"formControls.genre.invalid && formControls.genre.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"timeslotid\">Movie Time Slot</label>\n                    <select  name=\"timeslotid\" id=\"timeslotid\" formControlName=\"timeslotid\" class=\"form-control\">\n                        <option *ngFor=\"let timeslot of timeSlots\" value={{timeslot.id}}>{{timeslot.startTime}}-{{timeslot.endTime}}</option>\n                               \n                    </select>\n                    <div *ngIf=\"formControls.timeslotid.invalid && formControls.timeslotid.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"casts\">Casts</label>\n                    <div formArrayName=\"casts\">\n                        <div *ngFor=\"let i of casts.controls;let k=index\">\n                            <div [formGroupName]=\"k\">\n                                <div class=\"form-group\">\n                                    <input type=\"text\" name=\"castname\" formControlName=\"castname\" class=\"form-control\">\n                                </div>\n                            </div>\n                        </div>\n                    </div> \n                    <a class=\"btn btn-primary\" (click)=\"addCast()\">+</a>   \n                \n                    <div *ngIf=\"formControls.casts.invalid && formControls.casts.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <input type=\"submit\" class=\"btn btn-primary\" [disabled]=\"movieForm.invalid\" value=\"ADD\">\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router'\n\nimport { MovieService } from '../shared/services/movie.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    public movieService:MovieService,\n    public router:Router\n  ) { }\n\n  ngOnInit(): void {\n    this.movieService.setUserId();\n  }\n\n  logout(){\n    window.localStorage.removeItem(\"userId\");\n    window.localStorage.removeItem(\"token\");\n    window.localStorage.removeItem(\"role\");\n    this.movieService.setUserId();\n    this.router.navigate(['']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">BookMyShow</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\" *ngIf=\"movieService.userId!=0\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n          \n        </li>\n        <li class=\"nav-item active\" *ngIf=\"movieService.role=='Admin'\">\n          <a class=\"nav-link\" [routerLink]=\"['/admin/addmovie']\">Add Movies</a>\n        </li>\n        \n        <li class=\"nav-item active\" *ngIf=\"movieService.role=='Admin'\">\n          <a class=\"nav-link\" [routerLink]=\"['/admin/timeslot']\">Add TimeSlots</a>\n        </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\" *ngIf=\"movieService.userId===0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/authentication/signup']\">Signup</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link \" [routerLink]=\"['/authentication/signin']\">Signin</a>\n        </li>\n      </ul>\n    \n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\" *ngIf=\"movieService.role==='User'\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/user/bookings']\">MyBookings</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/user/bookinghistory']\">History</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav  mt-2 mt-lg-0\" *ngIf=\"movieService.userId!=0\">\n        <li class=\"nav-item ml-2\">\n          <a class=\"nav-link \" class=\"btn btn-outline-danger\" (click)=\"logout()\">Logout</a>\n        </li>\n        </ul>\n    </div>\n  </nav>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SignupComponent,SigninComponent,AuthenticationComponent } from './index';\r\n\r\nlet routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: AuthenticationComponent,\r\n      children: [\r\n        {\r\n          path:'signin',component:SigninComponent\r\n        },\r\n        {\r\n          path:'signup',component:SignupComponent\r\n        }\r\n      ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AuthenticationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {AddmovieComponent,AddtimeslotsComponent} from './index'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    AddmovieComponent,\n    AddtimeslotsComponent,\n    AdminComponent\n\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ],\n  exports:[\n    AddmovieComponent,\n    AddtimeslotsComponent\n  ]\n})\nexport class AdminModule { }\n","import { NonNullAssert } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl,FormGroup,ValidatorFn,Validators} from '@angular/forms'\nimport { ToastrService } from 'ngx-toastr';\nimport { MovieService } from 'src/app/shared/services/movie.service';\n\n\n@Component({\n  selector: 'app-addtimeslots',\n  templateUrl: './addtimeslots.component.html'\n})\nexport class AddtimeslotsComponent implements OnInit {\n\n  constructor(\n    private toastr:ToastrService,\n    private movieService:MovieService,\n    private fb:FormBuilder\n  ) { }\n  timeSlotForm!: FormGroup;\n\nisEnabled=true;\nendTimeMin:any;\n  ngOnInit(): void {\n    this.timeSlotFormInitializer();\n  }\ntimeSlotFormInitializer(){\n//   this.timeSlotForm = new FormGroup({\n//     starttime: new FormControl('', Validators.required),\n//     endtime: new FormControl('', [Validators.required])\n//  });\nthis.timeSlotForm=this.fb.group({\n  starttime:['',Validators.required],\n  endtime:['',Validators.required]\n},\n{\n  validator:this.timeValidator('starttime','endtime')\n})\n\n}\n\ntimeValidator(starttime:string,endtime:string){\n  return(formGroup:FormGroup)=>{\n    const starttimeControl=formGroup.controls[starttime];\n    const endtimeControl=formGroup.controls[endtime];\n    if(starttimeControl.value>endtimeControl.value){\n      endtimeControl.setErrors({endtimeError:true});\n    }else{\n      endtimeControl.setErrors(null);\n    }\n  }\n}\n\n\n  get formControls(){\n    return this.timeSlotForm.controls;\n  }\n\n  onSubmit(){\n      this.movieService.postTimeSlot(this.timeSlotForm.value).subscribe(res=>{\n        this.toastr.success(\"Successfully Added TimeSlot\");\n      })\n    this.timeSlotFormInitializer();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row d-flex justify-content-center\">\n    <div class=\"col-md-5\">\n      <h3 class=\"display-4 text-center\">Time Slots</h3>\n\n      <form [formGroup]=\"timeSlotForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"starttime\">Start Time</label>\n          <input\n            type=\"time\"\n            name=\"starttime\"\n            formControlName=\"starttime\"\n            id=\"starttime\"\n            class=\"form-control\"\n          />\n          <p\n            *ngIf=\"\n              formControls.starttime.invalid && formControls.starttime.touched\n            \"\n            class=\"text-danger\"\n          >\n            Please fill this field\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"endtime\">End Time</label>\n          <input\n            type=\"time\"\n            name=\"endtime\"\n            id=\"endtime\"\n            formControlName=\"endtime\"\n            class=\"form-control\"\n            \n          />\n          \n          <p\n            *ngIf=\"formControls.endtime.errors?.endtimeError &&formControls.endtime.touched\"\n            class=\"text-danger\"\n          >\n            End Time should be less then start time \n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <input\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"timeSlotForm.invalid\"\n            value=\"ADD\"\n          />\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html'\n})\nexport class AuthenticationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","export class Booking {\n    userId:any;\n    movieId:any;\n    quantity:any;\n    constructor (userId:any,movieId:any,quantity:any){\n        this.userId=userId;\n        this.movieId=movieId;\n        this.quantity=quantity;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n})\nexport class SignupComponent implements OnInit {\n  signupForm: any;\n  status = '';\n  message = '';\n  constructor(\n    private http: HttpClient,\n    private authenticationService: AuthenticationService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n   this.signupFormInitializer();\n  }\n  signupFormInitializer(){\n    this.signupForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$'),\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.pattern(\n          '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-zd$@$!%*?&].{8,}'\n        ),\n      ]),\n      role:new FormControl('',Validators.required)\n    });\n  }\n  get formControls() {\n    return this.signupForm.controls;\n  }\n  onSubmit() {\n    this.authenticationService.signUp(this.signupForm.value).subscribe((res) => {\n      res.status === 'Error'\n        ? this.toastr.error(res.message)\n        : this.toastr.success(res.message);\n      this.signupFormInitializer();\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-5\">\n            <h3 class=\"display-4 text-center\">SignUp</h3>\n            \n          \n            <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n\n                <div class=\"form-group\">\n                    <label for=\"username\">User Name</label>\n                    <input type=\"text\" name=\"username\" formControlName=\"username\" id=\"username\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.username.invalid && formControls.username.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"text\" name=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\"> \n                    <p *ngIf=\"formControls.email.invalid && formControls.email.touched\" class=\"text-danger\">\n                        Please fill this field\n                      </p>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"username\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\"> \n                    <div *ngIf=\"formControls.password.invalid && formControls.password.touched\" class=\"text-danger\">\n                        Password must contain:\n                        <ul>\n                            <li>Both Capital and small letters</li>\n                            <li>Must contain Alphanumeric</li>\n                            <li>Length must be atleast 8</li>\n                        </ul>\n                      </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"role\">Role</label>\n                    <select name=\"role\" id=\"role\" formControlName=\"role\" class=\"form-control\">\n                        <option value=\"User\">User</option>\n                        <option value=\"Admin\">Admin</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"submit\" class=\"btn btn-primary\" [disabled]=\"signupForm.invalid\" value=\"SignUp\">\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {JwtHelperService,JWT_OPTIONS} from '@auth0/angular-jwt'\n\nimport { DashboardComponent } from './dashboard';\nimport { HomeComponent } from './home';\n\nconst routes: Routes = [\n{\n  path:'',component:HomeComponent\n},\n{\n  path:'dashboard',component:DashboardComponent\n},\n{\n  path:'authentication',\n  loadChildren:()=>import(\"../app/authentication/authentication.module\").then(m=>m.AuthenticationModule)\n},\n{\n  path:'admin',\n  loadChildren:()=>import(\"../app/admin/admin.module\").then(m=>m.AdminModule)\n},\n{\n  path:'user',\n  loadChildren:()=>import(\"../app/user/user.module\").then(m=>m.UserModule)\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export * from \"./home.component\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}